{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/riadn/Desktop/AWS_PUSH_LAST/Projet-AWS-videoConferencing/frontend/src/shared/API_ROUTE.ts"],"sourcesContent":["export const API_ROUTE = {\n    login: \"http://ec2-34-224-60-168.compute-1.amazonaws.com:8000/api/login/\",\n    register: \"http://ec2-34-224-60-168.compute-1.amazonaws.com:8000/api/register/\",\n    validate:\"http://ec2-34-224-60-168.compute-1.amazonaws.com:8000/api/validate/\",\n    logout:\"http://ec2-34-224-60-168.compute-1.amazonaws.com:8000/api/logout/\"\n\n}"],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IACrB,OAAO;IACP,UAAU;IACV,UAAS;IACT,QAAO;AAEX"}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/riadn/Desktop/AWS_PUSH_LAST/Projet-AWS-videoConferencing/frontend/src/services/auth.ts"],"sourcesContent":["import { API_ROUTE } from \"@/shared/API_ROUTE\";\nimport { error } from \"console\";\nimport { ZCOOL_XiaoWei } from \"next/font/google\";\n\nexport async function login(data: FormData){\n    return fetch(\n        API_ROUTE.login, {\n        method: \"POST\",\n        headers: {\n                'Content-Type': 'application/json'\n              },\n        body: JSON.stringify({\n            username: String(data.get(\"email\")),\n            password: String(data.get(\"password\"))\n        })\n    });\n}\n\nexport async function register(data: FormData){\n    return fetch(\n        API_ROUTE.register, {\n        body: data\n    });\n}\n\n// to validate a user using the token stored in the local storage ( for now )\nexport async function validate(token: String){\n\n    return fetch(API_ROUTE.validate,{\n         method: \"GET\",\n         headers: {\n            \"Authorization\": \"Token \"+token,\n            'Content-Type': 'application/json'\n          },\n        redirect: \"follow\"\n    });\n}\n\nexport async function logout(token: string) {\n    return fetch(API_ROUTE.logout, {\n        method: \"POST\",\n        headers: {\n            \"Authorization\": \"Token \" + token,\n            'Content-Type': 'application/json'\n        },\n        redirect: \"follow\"\n    }).then(() => {\n        // Rediriger vers la landing page\n        localStorage.removeItem(\"token\");\n        window.location.href = \"/\";\n    }).catch(error => console.error(\"Erreur lors de la d√©connexion :\", error));\n}\n\n\n/**the response to validate function has this structure \n * for example\n * {\n    \"is_allowed\": true,\n    \"user\": {\n        \"id\": 9,\n        \"username\": \"user@free.fr\"\n    }\n}\n * \n * \n */\n\n\nexport async function getUserName(){\n    let token = localStorage.getItem(\"token\");\n    if (token){\n    let  res = await validate(token);\n    if (res.ok){\n        let json = await res.json();\n        return json.user.username;\n        // need to add some management for error\n    }\n    }\n    // error need to be managed\n    else{return \"\";}\n\n}"],"names":[],"mappings":";;;;;;;AAAA;;AAIO,eAAe,MAAM,IAAc;IACtC,OAAO,MACH,6HAAA,CAAA,YAAS,CAAC,KAAK,EAAE;QACjB,QAAQ;QACR,SAAS;YACD,gBAAgB;QAClB;QACN,MAAM,KAAK,SAAS,CAAC;YACjB,UAAU,OAAO,KAAK,GAAG,CAAC;YAC1B,UAAU,OAAO,KAAK,GAAG,CAAC;QAC9B;IACJ;AACJ;AAEO,eAAe,SAAS,IAAc;IACzC,OAAO,MACH,6HAAA,CAAA,YAAS,CAAC,QAAQ,EAAE;QACpB,MAAM;IACV;AACJ;AAGO,eAAe,SAAS,KAAa;IAExC,OAAO,MAAM,6HAAA,CAAA,YAAS,CAAC,QAAQ,EAAC;QAC3B,QAAQ;QACR,SAAS;YACN,iBAAiB,WAAS;YAC1B,gBAAgB;QAClB;QACF,UAAU;IACd;AACJ;AAEO,eAAe,OAAO,KAAa;IACtC,OAAO,MAAM,6HAAA,CAAA,YAAS,CAAC,MAAM,EAAE;QAC3B,QAAQ;QACR,SAAS;YACL,iBAAiB,WAAW;YAC5B,gBAAgB;QACpB;QACA,UAAU;IACd,GAAG,IAAI,CAAC;QACJ,iCAAiC;QACjC,aAAa,UAAU,CAAC;QACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;IAC3B,GAAG,KAAK,CAAC,CAAA,QAAS,QAAQ,KAAK,CAAC,mCAAmC;AACvE;AAiBO,eAAe;IAClB,IAAI,QAAQ,aAAa,OAAO,CAAC;IACjC,IAAI,OAAM;QACV,IAAK,MAAM,MAAM,SAAS;QAC1B,IAAI,IAAI,EAAE,EAAC;YACP,IAAI,OAAO,MAAM,IAAI,IAAI;YACzB,OAAO,KAAK,IAAI,CAAC,QAAQ;QACzB,wCAAwC;QAC5C;IACA,OAEI;QAAC,OAAO;IAAG;AAEnB"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/riadn/Desktop/AWS_PUSH_LAST/Projet-AWS-videoConferencing/frontend/src/app/%28layout-app%29/userPage/page.tsx"],"sourcesContent":["\"use client\"\n\n\nimport { useEffect, useState } from 'react';\nimport { getUserName } from '@/services/auth';\nimport Link from \"next/link\";\n\nimport \"./page.css\";\n\n\n/* page displayed when user is connected\nit has two button one to join a call and another to create\n a new call where the user will automatically be\nthe moderator\n*/\nexport default function UserPage() {\n\n    const [username, setUsername] = useState<String>();\n\n    // set the username with validation with the access token\n    useEffect( ()=>{\n\n        setStateUser();\n    })\n\n    async function setStateUser(){\n        let user = await getUserName();\n        console.log(\"USERNAME FOUND : \", user);\n        setUsername(user);\n    }\n\n    \n  return (\n    \n    <div className=\"user-container\">\n          <h1>Bienvenue {username}</h1>\n          \n            <div className=\"btn-container-user\">\n              <Link href={\"/videoConference\"} className=\"btn-container-user btn\">Lancer un call</Link>\n              <Link href={\"/joinRoom\"} className=\"btn-container-user btn\">Rejoindre un call</Link>\n              </div>\n            \n  </div>\n \n  );\n}"],"names":[],"mappings":";;;;AAGA;AACA;AACA;;;AALA;;;;;AAee,SAAS;;IAEpB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;IAEvC,yDAAyD;IACzD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAG;YAEP;QACJ;;IAEA,eAAe;QACX,IAAI,OAAO,MAAM,CAAA,GAAA,0HAAA,CAAA,cAAW,AAAD;QAC3B,QAAQ,GAAG,CAAC,qBAAqB;QACjC,YAAY;IAChB;IAGF,qBAEE,6LAAC;QAAI,WAAU;;0BACT,6LAAC;;oBAAG;oBAAW;;;;;;;0BAEb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAM;wBAAoB,WAAU;kCAAyB;;;;;;kCACnE,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAM;wBAAa,WAAU;kCAAyB;;;;;;;;;;;;;;;;;;AAM1E;GA9BwB;KAAA"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}