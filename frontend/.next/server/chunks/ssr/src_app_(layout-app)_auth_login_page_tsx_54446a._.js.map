{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/33685/Desktop/Projet-AWS-4/frontend/src/app/%28layout-app%29/auth/login/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport Link from \"next/link\";\r\nimport \"./login.css\"\r\nimport {  FormEvent, useState } from \"react\";\r\nimport { loginJWT } from \"@/services/auth\";\r\nimport { useRouter } from 'next/navigation';\r\n\r\n\r\nexport default function Login() {\r\n    const router = useRouter(); // handle change of url\r\n    const [pending, setPending] = useState<boolean>(false)\r\n    const [email, setEmail] = useState<string>('');\r\n    const [password, setPassword] = useState<string>('');\r\n    const [error, setError] = useState<string|null>(null);\r\n\r\n    \r\n    const handleSubmit = async (f: FormEvent<HTMLFormElement>) => {\r\n        f.preventDefault(); // empeche le rechargement de la page a cause du formulaire\r\n        if (!email.trim()) {\r\n            setError(\"L'email est obligatoire !\");\r\n            return;\r\n        }\r\n\r\n        setError(null); // Réinitialise les erreurs si tout est OK\r\n        console.log(\"Formulaire envoyé !\");\r\n        const e = new FormData(f.currentTarget); // recupe les datas du formulaire\r\n        console.log(\"RESPONSEFORM\" , e);\r\n        console.log(\"email :\", e.get(\"email\"));\r\n        console.log(\"password :\", e.get(\"password\"));\r\n       // redirect('/videoConference');\r\n        if (pending) { // pas de requetes multiples\r\n            console.log(\"PENDING\");\r\n            return \r\n        }\r\n\r\n        setPending(true)\r\n        try {\r\n            console.log(\"LOGIN STARTING\");\r\n           // let res = await login(e);\r\n           let res = await loginJWT(e); // envoie une requete http\r\n           console.log(\"RESPONSE\" , res);\r\n            console.log(\"RESPONSE IS OK :\" ,res.ok);\r\n         //   redirect('/videoConference');\r\n            if (res.ok){\r\n                router.push('/userPage');\r\n            }\r\n        } catch (error) {\r\n            console.log(\"LOGIN EROOR\", error);\r\n            setTimeout(() => setError(null), 1500)\r\n            setError(\"mot de passe ou email erroné !\")\r\n        }\r\n        setPending(false)\r\n    }\r\n\r\n    const validateEmail= (email: string) => {\r\n        if (!email.trim()) {\r\n            setError(\"Le mot de passe est obligatoire.\");\r\n        // etc+@etc.abcdef\r\n        } else if (!/^[A-Za-z0-9_.-]+@([A-Za-z0-9_.-]+\\.)+[A-Za-z0-9_.-]{2,6}$/.test(email)) {\r\n            setError(\"L'email doit être valide.\");\r\n        } else {\r\n            setError(null);\r\n        }\r\n    };\r\n\r\n    const validatePassword = (password: string) => {\r\n        // .trim() formatage sans \"\\t\\n\\r \"\r\n        if (!password.trim()) {\r\n            setError(\"Le mot de passe est obligatoire.\");\r\n        } else if (password.length < 9) {\r\n            setError(\"Le mot de passe doit contenir au minimum 9 caractères.\");\r\n        //} else if (/[0-9]/.test(password)) {\r\n        //    setError(\"Le mot de passe ne doit pas contenir que des chiffres\");\r\n        } else {\r\n            setError(null);\r\n        }\r\n    };\r\n\r\n    return (\r\n      <div className=\"auth container\">\r\n        <div className=\"auth-wrapper\">\r\n        <h1>Connexion</h1>\r\n        <p>Se connecter pour passer des appels d'une autre maniere</p>\r\n        {error && <p className=\"message msg-error text-center\">{error}</p>}\r\n        <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                <div className=\"form-input\">\r\n                    <input \r\n                    type=\"email\" \r\n                    required value={email} \r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value);\r\n                        validateEmail(e.target.value);\r\n                    }} \r\n                    name=\"email\" \r\n                    id=\"email\" \r\n                    autoComplete=\"false\" \r\n                    placeholder=\"ex: mymeet@gmail.com\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"form-label\">Mot de passe</label>\r\n                <div className=\"form-input\">\r\n                    <input \r\n                    type=\"password\" \r\n                    required value={password} \r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value);\r\n                        validatePassword(e.target.value);\r\n                    }} \r\n                    name=\"password\" \r\n                    autoComplete=\"false\" \r\n                    id=\"password\" \r\n                    placeholder=\"votre mot de passe\" \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <button className={\"btn btn-main jc-c ai-c \"+(pending ? \"disable\" : \"\")} type=\"submit\">{pending ? \"Loading...\" : \"Se connecter\"}</button>\r\n            \r\n            <Link href={\"/auth/register\"}>Pas encore membre ? <span className=\"clr_main\">s&apos;inscrire</span></Link>\r\n        </form>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}